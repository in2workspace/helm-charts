# Default values for example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: in2workspace/in2-issuer-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.4.1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: issuer.tenantName.127.0.0.1.nip.io
      paths:
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: issuer-backend
              port:
                number: 80
  tls: []
#    - hosts:
#        - example-host
#      secretName: example-secret

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /api/health
    port: 8080
  initialDelaySeconds: 40
  failureThreshold: 6
  periodSeconds: 10
  timeoutSeconds: 60
readinessProbe:
  httpGet:
    path: /api/health
    port: 8080
  initialDelaySeconds: 40
  failureThreshold: 6
  periodSeconds: 10
  timeoutSeconds: 60

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

app:
  # General configurations
  logLevel:
    app: INFO
    security: INFO
  # Database configurations
  db:
    host: issuer-postgres
    port: 5432
    database: in2
    schema: issuer
    username: postgres
    password: postgres
    existingSecret:
      enabled: false
      name: issuer-backend-secret
      key: postgres-password
  # Security configurations
  security:
    serviceIdentity:
      privateKey: <PRIVATE_KEY>
      didKey: <DID_KEY>
      verifiableCredential: <VC>
      existingSecret:
        enabled: false
        name: issuer-backend-secret
        privateKey: private-key
        didKey: did-key
        verifiableCredential: vc
    cors:
      default:
        allowedOrigins: "https://example.org"
      external:
        allowedOrigins: "https://new.example.org, https://example-2.org"
    keycloak:
      client:
        clientId: oidc4vci-wallet-client
        clientSecret: oidc4vci-wallet-client-secret
        username: user
        password: user
        existingSecret:
          enabled: false
          name: issuer-backend-secret
          clientSecretKey: client-secret
          clientPasswordKey: user-password
  # Mail configurations
  mail:
    host: smtp.example.org
    port: 587
    username: user
    password: password
    existingSecret:
      enabled: false
      name: issuer-backend-secret
      userKey: mail-user
      passwordKey: mail-password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.example.org

  remoteSignature:
    type: server # server or cloud
    externalURL: "https://issuer.in2.127.0.0.1.nip.io/dss"
    clientId: <CLIENT_ID>
    clientSecret: <CLIENT_SECRET>
    credentialId: <CREDENTIAL_ID>
    credentialPassword: <CREDENTIAL_PASSWORD>
    existingSecret:
      enabled: false
      name: issuer-backend-secret
      clientId: client-id
      clientSecret: client-secret
      credentialId: credential-id
      credentialPassword: credential-password
    defaultSigner:
      commonName: <COMMON_NAME>
      serialNumber: <SERIAL_NUMBER>
      email: <EMAIL>
      organization: <ORGANIZATION>
      organizationIdentifier: <ORGANIZATION_IDENTIFIER>
      country: <COUNTRY>
      existingSecret:
        enabled: false
        name: issuer-backend-secret
        commonName: signer-common-name
        serialNumber: signer-serial-number
        email: signer-email
        organization: signer-organization
        organizationIdentifier: signer-organization-identifier
        country: signer-country
  routing:
    issuerBackend:
      externalURL: "https://issuer.in2.127.0.0.1.nip.io"
      internalURL: "http://issuer-backend:8080"
    issuerFrontend:
      externalURL: "https://issuer.in2.127.0.0.1.nip.io"
      internalURL: "http://issuer-ui:8080"
    trustFramework:
      internalURL: "http://localhost:8080"
    knowledgebase:
      externalURL: "https://knowledgebase.com"
