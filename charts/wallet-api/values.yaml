# Default values for wallet-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: in2workspace/wallet-api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.2.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8082

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 40
  failureThreshold: 6
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 40
  failureThreshold: 6
  periodSeconds: 10
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

app:
  logLevel: DEBUG
  walletUi:
    schema: https
    domain: <The dns domain>
  authServer:
    external:
      schema: https
      domain: <The dns domain>
      path: /realms/wallet
    internal:
      schema: http
      domain: wallet-keycloak
      port: 8080
      path: /realms/wallet
    jwtDecoderPath: /protocol/openid-connect/certs
  ebsiTest:
    url: http://wallet-keycloak:8080/realms/wallet/protocol/openid-connect/token
    client:
      id: user-registry-client
      secret: <the secret>
    username:
      name: admin
      password: <the password>
  vault:
    provider: hashicorp
    host: vault
    schema: http
    port: 8200
    token: token
  broker:
    provider: scorpio
    external:
      schema: http
      domain: scorpio
      port: 9090
    pathsEntities: /ngsi-ld/v1/entities