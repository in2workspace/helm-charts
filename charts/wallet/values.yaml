## Wallet Identity Provider (Keycloak) configuartion - see https://github.com/bitnami/charts/tree/main/bitnami/keycloak
wallet-identity-provider:
  # -- should be enabled?
  enabled: true
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: wallet-identity-provider
  ## Keycloak authentication parameters
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/keycloak#admin-credentials
  auth:
    ## @param auth.adminUser Keycloak administrator user
    ##
    adminUser: admin
    ## @param auth.adminPassword Keycloak administrator password for the new user
    ##
    adminPassword: "1234"
  ## @param containerPorts.http Keycloak HTTP container port
  ## @param containerPorts.https Keycloak HTTPS container port
  ## @param containerPorts.infinispan Keycloak infinispan container port
  containerPorts:
    http: 9099
  ## PostgreSQL chart configuration
  ## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
  ## @param postgresql.enabled Switch to enable or disable the PostgreSQL helm chart
  ## @param postgresql.auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` with key `postgres-password` is provided
  ## @param postgresql.auth.username Name for a custom user to create
  ## @param postgresql.auth.password Password for the custom user to create
  ## @param postgresql.auth.database Name for a custom database to create
  ## @param postgresql.auth.existingSecret Name of existing secret to use for PostgreSQL credentials
  ## @param postgresql.architecture PostgreSQL architecture (`standalone` or `replication`)
  postgresql:
    enabled: true
    auth:
      postgresPassword: ""
      username: "user"
      password: "1234"
      database: "keycloak"
      existingSecret: ""
    architecture: standalone

## Wallet Driving Application (WDA) configuration - see https://github.com/in2workspace/helm-charts/tree/main/charts/wallet-driving-application
wallet-driving-application:
  # -- should be enabled?
  enabled: true
  ## Wallet Driving Application (WDA) Application parameters
  app:
    ## Wallet Server API parameters
    server:
      ## @param app.server.url Url to Wallet Server API
      ##
      url: http://wallet-server:8080
    # wallet-identity-provider (Keycloak)
    iam:
      url: http://wallet-identity-provider:9099
    # wallet-server Websocket
    websocket:
      url: ws://wallet-server:8080

## Event Streaming configuration in case to be used by scorpio - see https://github.com/bitnami/charts/tree/main/bitnami/kafka
kafka:
  # -- should kafka be enabled?
  enabled: false

## Context Broker configuration - see https://github.com/FIWARE/helm-charts/tree/main/charts/scorpio-broker-aaio for details
scorpio:
  # -- should scorpio be enabled
  enabled: true
  ## configuration of the image to be used
  image:
    # -- repository to be used - resource friendly all-in-one-runner without kafka
    repository: scorpiobroker/all-in-one-runner
    # -- tag of the image to be used - latest java image without kafka
    tag: java-4.1.11
  ## configuration of the database to be used by broker
  db:
    # -- host of the db
    dbhost: postgis
    # -- username to be used
    user: postgres
    # -- password to be used
    password: postgres
  ## configuration of the readiness probe
  readinessProbe:
    # -- path to be used for the readiness probe, older versions used /actuator/health
    path: /q/health
  ## configuration of the liveness probe
  livenessProbe:
    # -- path to be used for the readiness probe, older versions used /actuator/health
    path: /q/health
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: scorpio
  ## configuration to be used for the service offered by scorpio
  service:
    # -- ClusterIP is the recommended type for most clusters
    type: ClusterIP

## Context Broker Database configuration - see https://github.com/bitnami/charts/tree/main/bitnami/postgresql for details
postgis:
  # -- should postgis be enabled
  enabled: true
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: postgis
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  nameOverride: postgis
  ## auth configuration for the database
  auth:
    # -- username to be used
    username: postgres
    # -- should the default postgres user be enabled
    enablePostgresUser: true
    # -- username to be used
    password: postgres
  ## configuration of the postgres primary replicas
  primary:
    ## provide db initialization
    initdb:
      ## provide scripts for initialization
      scripts:
        # -- enable the postgis extension and create the database as expected by scorpio
        enable.sh: |
          psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE EXTENSION postgis;"
          psql postgresql://postgres:${POSTGRES_PASSWORD}@localhost:5432 -c "CREATE DATABASE ngb;"
