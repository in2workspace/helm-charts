# Default values for test.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: in2workspace/wallet-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.4.1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  # fixme: porqu√© es 8080 y no 80?
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: wallet.127.0.0.1.nip.io
      paths:
        - path: /api
          pathType: Prefix
  tls: []
#    - secretName: chart-example-tls
#      hosts:
#        - wallet.127.0.0.1.nip.io

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: 8080
readinessProbe:
  httpGet:
    path: /health
    port: 8080

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

app:
  logLevel: DEBUG
  ebsiTest:
    url: http://keycloak-wallet:8080/realms/wallet/protocol/openid-connect/token
    client:
      id: user-registry-client
      secret: defaultSecret
      existingSecret:
        # -- should an existing secret be used?
        enabled: false
        # -- name of the secret
        name: wallet-backend-secret
        # -- key to retrieve the password from
        key: client-secret
    userData:
      name: admin
      password: defaultPassword
      existingSecret:
        # -- should an existing secret be used?
        enabled: false
        # -- name of the secret
        name: wallet-backend-secret
        # -- key to retrieve the password from
        key: user-password
  vault:
    provider: hashicorp
    host: vault-server
    scheme: http
    port: 8200
    token: 0000-0000-0000-0000-000000000000
    existingSecret:
      # -- should an existing secret be used?
      enabled: false
      # -- name of the secret
      name: wallet-backend-secret
      # -- key to retrieve the token from
      key: token
  db:
    host: wallet-postgres
    port: 5432
    name: wallet
    schema: wallet
    username: postgres
    password: postgres
    existingSecret:
      enabled: false
      name: db-secret
      key: password
