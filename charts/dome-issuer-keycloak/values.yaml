# Default values for issuer-keycloak-plugin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: in2workspace/dome-issuer-keycloak
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.0.0-SNAPSHOT

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /keycloak
          pathType: ImplementationSpecific
  tls:
    - hosts:
        - example-host
      secretName: example-secret

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

readinessProbe:
  path: /health
  port: http
  # IN2: Extra attributes for the readinessProbe
  initialDelaySeconds: 40
  failureThreshold: 6
  periodSeconds: 10

livenessProbe:
  path: /health
  port: http
  # IN2: Extra attributes for the livenessProbe
  initialDelaySeconds: 40
  failureThreshold: 6
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

app:
  internalServerPort: 8080

# Keycloak Configuration
keycloak:
  proxy: edge
  logsCertsLevel: TRACE
  logLevel: DEBUG
  admin:
    username: admin
    password: admin
    existingSecret:
      enabled: false
      name: keycloak-admin-password-secret
      passwordKey: keycloakAdminPassword
  relativePath: /keycloak
  hostname:
    url:
      # if deployed locally set to false
      externalService: true
      scheme: http
      # change by the external url or set to localhost if deployed locally
      host: example.org
      # internalPort is only used if externalService is false
      internalPort: 30002
      path: /
    adminUrl:
      # if deployed locally set to false
      externalService: true
      scheme: http
      # change by the external url or set to localhost if deployed locally
      host: example.org
      # internalPort is only used if externalService is false
      internalPort: 30002
      path: /
  https:
    trustStoreFile: /opt/keycloak/truststore/truststore.jks
    trustStorePassword: pempas
    existingSecret:
      enabled: false
      name: keycloak-trust-store-secrets
      trustStorePasswordKey: keycloakTrustStorePassword
    clientAuth: request
  db:
    host: issuer-keycloak-postgres
    port: 5432
    externalService: true
    name: cred
    username: postgres
    password: postgres
    existingSecret:
      enabled: false
      name: keycloak-db-secret
      passwordKey: keycloakDbPassword
    type: postgres

# Issuer API Configuration
issuerApi:
  url: http://issuer-api:8080
  externalUrl:
    # if deployed locally set to false
    externalService: true
    scheme: http
    # change by the external url or set to localhost if deployed locally
    host: example.org
    # internalPort is only used if externalService is false
    internalPort: 30001
    path: /

# Pre-authorization Configuration
preAuth:
  lifespan: 10
  lifespanTimeUnit: MINUTES

# Transaction Code Configuration
txCode:
  size: 4
  description: Enter the PIN code

# Token Configuration
token:
  expiration: 2592000

