# Default values for demo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: in2workspace/dome-issuer-keycloak
  pullPolicy: Always # IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.0.3

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This defines the namespace where the application resources will be deployed.
# If left empty (""), the namespace must be specified externally, for example,
# via ArgoCD's Application manifest using the destination.namespace field
# or in the Helm command with --namespace.
namespace: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80 # 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - hosts:
        - example-host
      secretName: example-secret

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 192Mi
  requests:
    cpu: 100m
    memory: 128Mi

readinessProbe:
  path: /health
  port: 8080
  initialDelaySeconds: 30
  failureThreshold: 6
  periodSeconds: 10

livenessProbe:
  path: /health
  port: 8080
  initialDelaySeconds: 30
  failureThreshold: 6
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

keycloak:
  internalServerPort: 8080
  proxy: edge
  logsCertsLevel: TRACE
  logLevel: DEBUG
  admin:
    username: admin
    password: admin
    existingSecret:
      enabled: false
      name: keycloak-secrets
      passwordKey: keycloakAdminPassword
  relativePath: /keycloak
  hostname:
    url:
      # if deployed locally set to false
      externalService: true
      scheme: http
      # change by the external url or set to localhost if deployed locally
      host: example.org
      # internalPort is only used if externalService is false
      internalPort: 30001
      path: /
    adminUrl:
      # if deployed locally set to false
      externalService: true
      scheme: http
      # change by the external url or set to localhost if deployed locally
      host: example.org
      # internalPort is only used if externalService is false
      internalPort: 30002
      path: /
  https:
    trustStoreFile: /opt/keycloak/truststore/truststore.jks
    trustStorePassword: pempas
    existingSecret:
      enabled: false
      name: keycloak-secrets
      trustStorePasswordKey: keycloakTrustStorePassword
    clientAuth: request

mail:
  host: smtp.example.org
  port: 587
  from: example@example.org
  fromDisplayName: Example
  replyTo: example@example.org
  username: user
  password: password
  existingSecret:
    enabled: false
    name: mail-secret
    userKey: mail-user
    passwordKey: mail-password
  properties:
    mail:
      smtp:
        auth: true
        starttls:
          enable: true
        ssl:
          enable: false

keycloakExtension:
  preAuthorizedCode: # preAuth
    lifespan: 10
    lifespanTimeUnit: MINUTES
  token:
    expiration: 2592000
  credentialIssuer: # issuerApi
    url: http://issuer-api:8080
    externalUrl:
      # if deployed locally set to false
      externalService: true
      scheme: http
      # change by the external url or set to localhost if deployed locally
      host: example.org
      # internalPort is only used if externalService is false
      internalPort: 30001
      path: /

db:
  host: host
  port: 5432
  externalService: true
  name: database-name
  username: postgres
  password: postgres
  existingSecret:
    enabled: false
    name: keycloak-db-secret
    passwordKey: keycloakDbPassword
  type: postgres

postgresKeycloak:
  # -- should the postgresql deployment be enabled
  enabled: true
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  fullnameOverride: postgres-keycloak
  # -- overrides the generated name, provides stable service names - this should be avoided if multiple instances are available in the same namespace
  nameOverride: postgres-keycloak
  ## auth configuration for the database
  auth:
    # -- username to be used
    username: postgres
    # -- should the default postgres user be enabled
    enablePostgresUser: true
    # -- password to be used
    password: postgres
    # -- should the default postgres user be enabled
    database: postgres_keycloak
