apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wallet-driving-application.fullname" . }}
  annotations:
    kompose.cmd: kompose convert -c
    kompose.version: 1.32.0 (765fde254)
  labels:
    {{- include "wallet-driving-application.labels" . | nindent 4 }}
    io.kompose.service: wallet-driving-application
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "wallet-driving-application.selectorLabels" . | nindent 6 }}
      io.kompose.service: wallet-driving-application
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
        kompose.cmd: kompose convert -c
        kompose.version: 1.32.0 (765fde254)
      {{- end }}
      labels:
        {{- include "wallet-driving-application.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        io.kompose.network/kompose-default: "true"
        io.kompose.service: wallet-driving-application
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wallet-driving-application.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http 
              containerPort: 8088
              hostPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          env:
            - name: SERVER_URL
              value: {{.Values.app.server.url}}
            - name: IAM_URI
              value: {{.Values.app.iam.url}}
            - name: IAM_URL
              value: {{.Values.app.iam.uri}}
            - name: EXECCONT_URI
              value: {{.Values.app.executionContext.uri}}
            - name: VP_URI
              value: {{.Values.app.verifiablePresentation.uri}}
            - name: CREDID_URI
              value: {{.Values.app.credentialsId.uri}}
            - name: CRED_URI
              value: {{.Values.app.credentials.uri}}
            - name: USER_URI
              value: {{.Values.app.user.uri}}
            - name: WEBSOCKET_URL
              value: {{.Values.app.websocket.url}}
            - name: WEBSOCKET_URI
              value: {{.Values.app.websocket.uri}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always