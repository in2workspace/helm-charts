# Default values for example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: in2workspace/in2-wallet-api
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.4.3
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        # we don't specify path here because it is taken from app.basePath
          pathType: Prefix
  tls: []
#    - hosts:
#        - example-host
#      secretName: example-secret

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  httpGet:
    path: /api/health
  initialDelaySeconds: 40
  failureThreshold: 6
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /api/health
  initialDelaySeconds: 40
  failureThreshold: 6
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# todo: use configmap when needed
app:
  # has to match ingress.hosts.host.path
  # todo: remove or refactor to match it with ingress backend path
  basePath: /api
  logLevel: DEBUG
  authServer:
    externalUrl: example-external-domain.org/keycloak/realms/wallet
    internalUrl: example-internal-domain.org/keycloak/realms/wallet
  cors:
    # expects a string of url's separated with comma and space
    allowedOrigins:
  vault:
    provider: hashicorp
    url: http://vault-server:8200
    token: defaultToken
    existingSecret:
      # -- should an existing secret be used
      enabled: false
      # -- name of the secret
      name: dome-wallet-backend-secret
      # -- key to retrieve the token from
      key: vault-token
  ebsiTest:
    url: http://dome-wallet-keycloak:8080/realms/wallet/protocol/openid-connect/token
    client:
      id: user-registry-client
      secret: defaultSecret
      existingSecret:
        # -- should an existing secret be used
        enabled: false
        # -- name of the secret
        name: dome-wallet-backend-secret # dome wallet-backend-secret...
        # -- key to retrieve the password from
        key: ebsi-client-secret
    userData:
      name: admin
      password: defaultPassword
      existingSecret:
        # -- should an existing secret be used
        enabled: false
        # -- name of the secret
        name: dome-wallet-backend-secret # dome wallet-backend-secret...
        # -- key to retrieve the password from
        key: ebsi-user-password

  db:
    externalService: false # todo: remove?
    schema: wallet
    host: dome-wallet-postgres
    port: 5432
    name: wallet
    username: postgres
    password: postgres
    existingSecret:
      enabled: false
      name: dome-wallet-backend-secret
      key: postgres-password

