# Default values for example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: <your-image-repository>
  # Overrides the image tag whose default is the chart appVersion.
  tag: <your-image-tag>
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

readinessProbe:
  path: /health
  initialDelaySeconds: 5
  failureThreshold: 6
  periodSeconds: 2

livenessProbe:
  path: /health
  initialDelaySeconds: 40
  failureThreshold: 6
  periodSeconds: 10

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

app:
  profile: test
  logLevel: DEBUG
  internalServerPort: 8080
  operator:
    organizationIdentifier: VATES-S9999999E
  broker:
    provider: scorpio
    internalDomain: http://scorpio:9090
    externalDomain: http://scorpio:9090
  ngsiSubscription:
    notificationEndpoint: http://desmos:8080/api/v1/notifications/broker
    entityTypes:
  dltAdapter:
    provider: digitelts
    internalDomain: http://dlt-adapter:8080
    externalDomain: http://dlt-adapter:8080
  txSubscription:
    notificationEndpoint: http://desmos:8080/api/v1/notifications/dlt
    entityTypes:
  externalDomain: "http://example-external-domain.org"
  externalAccessNodesUrls:
    enableCustomUrls: false
    customUrls: "http://your-custom-url.org"
  privateKey:
    value: your-private-key
    existingSecret:
      enabled: false
      name: private-key-secret
      key: private-key
  trustedAccessNodesList:
    enableCustomTrustedList: false
    customTrustedList: "https://raw.githubusercontent.com/DOME-Marketplace/dome-access-node-directory/main/access-node-directory-"

db:
  host: postgresql-connector
  port: 5432
  externalService: false
  name: mktdb
  username: postgres
  password: postgres
  existingSecret:
      # -- should an existing secret be used
    enabled: false
    # -- name of the secret
    name: desmos-secret
    # -- key to retrieve the password from
    key: desmos-db-password
