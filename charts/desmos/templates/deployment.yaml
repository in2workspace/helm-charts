apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "desmos.fullname" . }}
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    {{- include "desmos.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "desmos.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "desmos.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "desmos.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: check-external-services
          image: curlimages/curl
          command:
            - sh
            - -c
            - >
              echo "Checking availability for: {{ .Values.app.broker.internalDomain }}/q/health";
              echo "Checking availability for: {{ .Values.app.dltAdapter.internalDomain }}/health";
              response1=$(curl -si {{ .Values.app.broker.internalDomain }}/q/health);
              response2=$(curl -si {{ .Values.app.dltAdapter.internalDomain }}/health);
              until echo "$response1" | grep -q "HTTP/1.[01] 200 OK" && echo "$response2" | grep -q "HTTP/1.[01] 200 OK"; do
                echo "Waiting for external services to be available at {{ .Values.app.broker.internalDomain }}/q/health and {{ .Values.app.dltAdapter.internalDomain }}/health...";
                echo "Response from {{ .Values.app.broker.internalDomain }}/q/health:";
                echo "$response1";
                echo "Response from {{ .Values.app.dltAdapter.internalDomain }}/health:";
                echo "$response2";
                sleep 10;
                response1=$(curl -si {{ .Values.app.broker.internalDomain }}/q/health);
                response2=$(curl -si {{ .Values.app.dltAdapter.internalDomain }}/health);
              done;
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.internalServerPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{.Values.app.profile}}
            - name: LOGGING_LEVEL_ROOT
              value: {{.Values.app.logLevel.root}}
            - name: LOGGING_LEVEL_ES_IN2_DESMOS
              value: {{.Values.app.logLevel.app}}
            - name: SERVER_PORT
              value: {{ quote .Values.app.internalServerPort}}
            - name: SPRING_R2DBC_URL
              value: "r2dbc:postgresql://{{ .Values.db.host }}{{ if not .Values.db.externalService }}:{{ .Values.db.port }}{{ end }}/{{ .Values.db.name }}"
            - name: SPRING_R2DBC_USERNAME
              value: {{.Values.db.username}}
            - name: SPRING_R2DBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "desmos.secretName" . }}
                  key: {{ include "desmos.passwordKey" . }}
            - name: SPRING_FLYWAY_URL
              value: "jdbc:postgresql://{{ .Values.db.host }}{{ if not .Values.db.externalService }}:{{ .Values.db.port }}{{ end }}/{{ .Values.db.name }}"
            - name: OPERATOR_ORGANIZATION_IDENTIFIER
              value: {{.Values.app.operator.organizationIdentifier}}
            - name: BROKER_PROVIDER
              value: {{.Values.app.broker.provider}}
            - name: BROKER_EXTERNAL_DOMAIN
              value: {{.Values.app.broker.externalDomain}}
            - name: BROKER_INTERNAL_DOMAIN
              value: {{.Values.app.broker.internalDomain}}
            - name: NGSI_SUBSCRIPTION_NOTIFICATION_ENDPOINT
              value: {{.Values.app.ngsiSubscription.notificationEndpoint}}
            - name: NGSI_SUBSCRIPTION_ENTITY_TYPES
              value: {{.Values.app.ngsiSubscription.entityTypes}}
            - name: DLT_ADAPTER_PROVIDER
              value: {{.Values.app.dltAdapter.provider}}
            - name: DLT_ADAPTER_INTERNAL_DOMAIN
              value: {{.Values.app.dltAdapter.internalDomain}}
            - name: DLT_ADAPTER_EXTERNAL_DOMAIN
              value: {{.Values.app.dltAdapter.externalDomain}}
            - name: TX_SUBSCRIPTION_NOTIFICATION_ENDPOINT
              value: {{.Values.app.txSubscription.notificationEndpoint}}
            - name: TX_SUBSCRIPTION_ENTITY_TYPES
              value: {{.Values.app.txSubscription.entityTypes}}
            {{- if .Values.app.externalAccessNodesUrls.enableCustomUrls }}
            - name: EXTERNAL-ACCESS-NODES_URLS
              value: {{.Values.app.externalAccessNodesUrls.customUrls}}
            {{- end }}
            - name: API_EXTERNAL_DOMAIN
              value: {{.Values.app.externalDomain}}
            - name: SECURITY_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "desmos.privateKey-secretName" . }}
                  key: {{ include "desmos.privateKey-privateKey" . }}
            - name: LEAR_CREDENTIAL_MACHINE_IN_BASE64
              valueFrom:
                secretKeyRef:
                  name: {{ include "desmos.learCredentialMachine-secretName" . }}
                  key: {{ include "desmos.learCredentialMachine-learCredentialMachine" . }}
            {{- if .Values.app.trustedAccessNodesList.enableCustomTrustedList }}
            - name: ACCESS_NODE_TRUSTED_ACCESS_NODES_LIST
              value: {{ .Values.app.trustedAccessNodesList.customTrustedList }}
            {{- end }}
            {{- if .Values.app.verifier.enableCustomVerifier }}
            - name: VERIFIER_URL
              value: {{ .Values.app.verifier.customVerifier }}
            {{- end }}