name: Deploy Helm Charts

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  packages: write

jobs:
  package-and-publish:
    name: Package and Publish Helm Charts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Authenticate to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GH_PAT }}" | helm registry login ghcr.io --username $GITHUB_ACTOR --password-stdin

      - name: Create Output Directory
        run: mkdir -p helm-packages

      - name: Package and Push Helm Charts
        run: |
          CHARTS=$(find charts -mindepth 1 -maxdepth 1 -type d -printf "%f\n")

          for CHART in $CHARTS; do
            if [ -d "charts/$CHART" ]; then
              echo "üì¶ Building dependencies for $CHART"
              helm dependency build "charts/$CHART"

              echo "üì¶ Packaging Helm Chart: $CHART"
              helm package "charts/$CHART" --destination helm-packages

              CHART_FILE=$(ls helm-packages/$CHART-*.tgz | head -n 1)
              if [[ -f "$CHART_FILE" ]]; then
                echo "üöÄ Pushing Helm Chart to GHCR: $CHART_FILE"
                helm push "$CHART_FILE" oci://ghcr.io/${{ github.repository_owner }}/helm-charts
              else
                echo "‚ö†Ô∏è No .tgz file found for $CHART, skipping push!"
              fi
            fi
          done

      - name: Generate index.yaml
        run: |
          echo "‚öôÔ∏è Generating index.yaml..."
          helm repo index helm-packages --url https://in2workspace.github.io/helm-charts
          cp helm-packages/index.yaml index.yaml

      - name: Commit and Push to gh-pages
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
          # Crear directorio temporal y mover los archivos antes de cambiar de rama
          mkdir -p /tmp/helm-repo
          cp -r helm-packages/*.tgz /tmp/helm-repo/
          cp index.yaml /tmp/helm-repo/
      
          # Asegurar que la rama gh-pages existe
          git fetch origin gh-pages || git checkout --orphan gh-pages
          git checkout gh-pages
      
          # Mover los archivos de vuelta despu√©s de cambiar de rama
          mv /tmp/helm-repo/*.tgz .
          mv /tmp/helm-repo/index.yaml .
      
          git add *.tgz index.yaml
      
          # Verificar si hay cambios antes de hacer commit
          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit."
            exit 0
          fi
      
          git commit -m "üöÄ Update Helm Charts"
          git push origin gh-pages --force
